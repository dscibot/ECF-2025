name: Deploy Java App to AWS EC2 via Tomcat Manager

on:
  push:
    branches:
      - main  # DÃ©clenche le workflow sur un push vers main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # ðŸ“Œ 1. RÃ©cupÃ©rer le code source
    - name: Checkout code
      uses: actions/checkout@v3

    # ðŸ“Œ 2. Installer Java et Maven
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # ðŸ“Œ 3. Compiler l'application avec Maven
    - name: Build with Maven
      working-directory: HelloWorld
      run: mvn clean package

    # ðŸ“Œ 4. VÃ©rifier les fichiers gÃ©nÃ©rÃ©s
    - name: List target directory
      working-directory: HelloWorld
      run: ls -l target/

    # ðŸ“Œ 5. DÃ©ploiement sur Tomcat via API Manager
    - name: Deploy WAR to Tomcat
      env:
        EC2_IP: ${{ secrets.EC2_IP }}
        TOMCAT_USER: admin
        TOMCAT_PASSWORD: ${{ secrets.TOMCAT_PASSWORD }}
      working-directory: HelloWorld
      run: |
        echo "DÃ©ploiement via l'API Manager..."
        curl -v -u $TOMCAT_USER:$TOMCAT_PASSWORD --upload-file target/helloworld-0.0.1-SNAPSHOT.war \
        "http://${EC2_IP}:8080/manager/text/deploy?path=/app&update=true"

    # ðŸ“Œ 6. VÃ©rifier si l'application est bien dÃ©ployÃ©e
    - name: Check Deployment
      run: |
        sleep 10  # Attendre que Tomcat termine le dÃ©ploiement
        curl -I http://${{ secrets.EC2_IP }}:8080/app
